/* You can add global styles to this file, and also import other style files */
//@import "../node_modules/material-design-icons/iconfont/material-icons.css"; // offline mat icons .. sometimes not working

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

body {
    transition: color 0.25s, background 0.25s;
}

.fill-space {
    flex: 1 1 auto;
}

// schedule colors
$s_color_1: "#3B8E30";
$s_color_2: "#7C2774";
$s_color_3: "#251351";
$s_color_4: "#5C80BC";
$s_color_5: "#912224";

@function setForeground($color) {
    @if (lightness($color) > 50) {
        @return #000000; // Lighter background, return dark color
    } @else {
        @return #ffffff; // Darker background, return light color
    }
}


@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// **Be sure that you only ever include this mixin once!**
@include mat-core();

// Define the default theme (same as the example above).
$candy-app-primary: mat-palette($mat-indigo);
$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);
$candy-app-theme:   mat-light-theme($candy-app-primary, $candy-app-accent);

// Include the default theme styles.
//@include angular-material-theme($candy-app-theme);


// Define an alternate dark theme.
$dark-primary: mat-palette($mat-blue-grey);
$dark-accent:  mat-palette($mat-amber, A200, A100, A400);
$dark-warn:    mat-palette($mat-deep-orange);
$dark-theme:   mat-dark-theme($dark-primary, $dark-accent, $dark-warn);
//@include angular-material-theme($dark-theme);

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.unicorn-dark-theme {
}
